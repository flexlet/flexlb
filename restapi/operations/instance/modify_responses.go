// Code generated by go-swagger; DO NOT EDIT.

package instance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/flexlet/flexlb/models"
)

// ModifyOKCode is the HTTP code returned for type ModifyOK
const ModifyOKCode int = 200

/*ModifyOK Modify Instance succeeded

swagger:response modifyOK
*/
type ModifyOK struct {

	/*
	  In: Body
	*/
	Payload *models.Instance `json:"body,omitempty"`
}

// NewModifyOK creates ModifyOK with default headers values
func NewModifyOK() *ModifyOK {

	return &ModifyOK{}
}

// WithPayload adds the payload to the modify o k response
func (o *ModifyOK) WithPayload(payload *models.Instance) *ModifyOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the modify o k response
func (o *ModifyOK) SetPayload(payload *models.Instance) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModifyOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ModifyBadRequestCode is the HTTP code returned for type ModifyBadRequest
const ModifyBadRequestCode int = 400

/*ModifyBadRequest modify bad request

swagger:response modifyBadRequest
*/
type ModifyBadRequest struct {

	/*
	  In: Body
	*/
	Payload *ModifyBadRequestBody `json:"body,omitempty"`
}

// NewModifyBadRequest creates ModifyBadRequest with default headers values
func NewModifyBadRequest() *ModifyBadRequest {

	return &ModifyBadRequest{}
}

// WithPayload adds the payload to the modify bad request response
func (o *ModifyBadRequest) WithPayload(payload *ModifyBadRequestBody) *ModifyBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the modify bad request response
func (o *ModifyBadRequest) SetPayload(payload *ModifyBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModifyBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ModifyUnauthorizedCode is the HTTP code returned for type ModifyUnauthorized
const ModifyUnauthorizedCode int = 401

/*ModifyUnauthorized modify unauthorized

swagger:response modifyUnauthorized
*/
type ModifyUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewModifyUnauthorized creates ModifyUnauthorized with default headers values
func NewModifyUnauthorized() *ModifyUnauthorized {

	return &ModifyUnauthorized{}
}

// WithPayload adds the payload to the modify unauthorized response
func (o *ModifyUnauthorized) WithPayload(payload interface{}) *ModifyUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the modify unauthorized response
func (o *ModifyUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModifyUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ModifyForbiddenCode is the HTTP code returned for type ModifyForbidden
const ModifyForbiddenCode int = 403

/*ModifyForbidden modify forbidden

swagger:response modifyForbidden
*/
type ModifyForbidden struct {

	/*
	  In: Body
	*/
	Payload *ModifyForbiddenBody `json:"body,omitempty"`
}

// NewModifyForbidden creates ModifyForbidden with default headers values
func NewModifyForbidden() *ModifyForbidden {

	return &ModifyForbidden{}
}

// WithPayload adds the payload to the modify forbidden response
func (o *ModifyForbidden) WithPayload(payload *ModifyForbiddenBody) *ModifyForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the modify forbidden response
func (o *ModifyForbidden) SetPayload(payload *ModifyForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModifyForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ModifyNotFoundCode is the HTTP code returned for type ModifyNotFound
const ModifyNotFoundCode int = 404

/*ModifyNotFound modify not found

swagger:response modifyNotFound
*/
type ModifyNotFound struct {

	/*
	  In: Body
	*/
	Payload *ModifyNotFoundBody `json:"body,omitempty"`
}

// NewModifyNotFound creates ModifyNotFound with default headers values
func NewModifyNotFound() *ModifyNotFound {

	return &ModifyNotFound{}
}

// WithPayload adds the payload to the modify not found response
func (o *ModifyNotFound) WithPayload(payload *ModifyNotFoundBody) *ModifyNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the modify not found response
func (o *ModifyNotFound) SetPayload(payload *ModifyNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModifyNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ModifyInternalServerErrorCode is the HTTP code returned for type ModifyInternalServerError
const ModifyInternalServerErrorCode int = 500

/*ModifyInternalServerError modify internal server error

swagger:response modifyInternalServerError
*/
type ModifyInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewModifyInternalServerError creates ModifyInternalServerError with default headers values
func NewModifyInternalServerError() *ModifyInternalServerError {

	return &ModifyInternalServerError{}
}

// WithPayload adds the payload to the modify internal server error response
func (o *ModifyInternalServerError) WithPayload(payload interface{}) *ModifyInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the modify internal server error response
func (o *ModifyInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModifyInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
