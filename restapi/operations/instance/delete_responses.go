// Code generated by go-swagger; DO NOT EDIT.

package instance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// DeleteOKCode is the HTTP code returned for type DeleteOK
const DeleteOKCode int = 200

/*DeleteOK Delete Instance succeeded

swagger:response deleteOK
*/
type DeleteOK struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewDeleteOK creates DeleteOK with default headers values
func NewDeleteOK() *DeleteOK {

	return &DeleteOK{}
}

// WithPayload adds the payload to the delete o k response
func (o *DeleteOK) WithPayload(payload interface{}) *DeleteOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete o k response
func (o *DeleteOK) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// DeleteBadRequestCode is the HTTP code returned for type DeleteBadRequest
const DeleteBadRequestCode int = 400

/*DeleteBadRequest delete bad request

swagger:response deleteBadRequest
*/
type DeleteBadRequest struct {

	/*
	  In: Body
	*/
	Payload *DeleteBadRequestBody `json:"body,omitempty"`
}

// NewDeleteBadRequest creates DeleteBadRequest with default headers values
func NewDeleteBadRequest() *DeleteBadRequest {

	return &DeleteBadRequest{}
}

// WithPayload adds the payload to the delete bad request response
func (o *DeleteBadRequest) WithPayload(payload *DeleteBadRequestBody) *DeleteBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete bad request response
func (o *DeleteBadRequest) SetPayload(payload *DeleteBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteUnauthorizedCode is the HTTP code returned for type DeleteUnauthorized
const DeleteUnauthorizedCode int = 401

/*DeleteUnauthorized delete unauthorized

swagger:response deleteUnauthorized
*/
type DeleteUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewDeleteUnauthorized creates DeleteUnauthorized with default headers values
func NewDeleteUnauthorized() *DeleteUnauthorized {

	return &DeleteUnauthorized{}
}

// WithPayload adds the payload to the delete unauthorized response
func (o *DeleteUnauthorized) WithPayload(payload interface{}) *DeleteUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete unauthorized response
func (o *DeleteUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// DeleteForbiddenCode is the HTTP code returned for type DeleteForbidden
const DeleteForbiddenCode int = 403

/*DeleteForbidden delete forbidden

swagger:response deleteForbidden
*/
type DeleteForbidden struct {

	/*
	  In: Body
	*/
	Payload *DeleteForbiddenBody `json:"body,omitempty"`
}

// NewDeleteForbidden creates DeleteForbidden with default headers values
func NewDeleteForbidden() *DeleteForbidden {

	return &DeleteForbidden{}
}

// WithPayload adds the payload to the delete forbidden response
func (o *DeleteForbidden) WithPayload(payload *DeleteForbiddenBody) *DeleteForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete forbidden response
func (o *DeleteForbidden) SetPayload(payload *DeleteForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteNotFoundCode is the HTTP code returned for type DeleteNotFound
const DeleteNotFoundCode int = 404

/*DeleteNotFound delete not found

swagger:response deleteNotFound
*/
type DeleteNotFound struct {

	/*
	  In: Body
	*/
	Payload *DeleteNotFoundBody `json:"body,omitempty"`
}

// NewDeleteNotFound creates DeleteNotFound with default headers values
func NewDeleteNotFound() *DeleteNotFound {

	return &DeleteNotFound{}
}

// WithPayload adds the payload to the delete not found response
func (o *DeleteNotFound) WithPayload(payload *DeleteNotFoundBody) *DeleteNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete not found response
func (o *DeleteNotFound) SetPayload(payload *DeleteNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteInternalServerErrorCode is the HTTP code returned for type DeleteInternalServerError
const DeleteInternalServerErrorCode int = 500

/*DeleteInternalServerError delete internal server error

swagger:response deleteInternalServerError
*/
type DeleteInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewDeleteInternalServerError creates DeleteInternalServerError with default headers values
func NewDeleteInternalServerError() *DeleteInternalServerError {

	return &DeleteInternalServerError{}
}

// WithPayload adds the payload to the delete internal server error response
func (o *DeleteInternalServerError) WithPayload(payload interface{}) *DeleteInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete internal server error response
func (o *DeleteInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
