---
swagger: '2.0'
info:
  title: flexlb
  version: v1
  description: |
    Flexible load balancer API to control keepalived and haproxy
  contact:
    name: Yaohui Wang
    email: yaohuiwang@outlook.com
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: Instance
    description: Instance
  - name: Service
    description: Service
basePath: /flexlb/v1
paths:
  /readyz:
    get:
      description: 'Ready status'
      tags:
        - Service
      operationId: readyz
      produces:
        - application/json
      responses:
        '200':
          description: 'Ready status'
          schema:
              $ref: '#/definitions/ReadyStatus'
  /instances:
    post:
      description: 'Create Instance'
      tags:
        - Instance
      operationId: create
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: config
          in: body
          description: 'Instance config'
          required: true
          schema:
            $ref: '#/definitions/InstanceConfig'
      responses:
        '200':
          description: 'Create Instance succeeded'
          schema:
              $ref: '#/definitions/Instance'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
    get:
      description: 'List Instances'
      tags:
        - Instance
      operationId: list
      produces:
        - application/json
      parameters:
        - name: name
          in: query
          description: 'Instance name'
          x-nullable: true
          pattern: ^[A-Za-z0-9\-_.]{1,32}$
          type: string
      responses:
        '200':
          description: 'List Instances succeeded'
          schema:
              type: array
              items:
                $ref: '#/definitions/Instance'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
    put:
      description: 'Modify Instance'
      tags:
        - Instance
      operationId: modify
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: config
          in: body
          required: true
          description: 'Instance request'
          schema:
            $ref: '#/definitions/InstanceConfig'
      responses:
        '200':
          description: 'Modify Instance succeeded'
          schema:
              $ref: '#/definitions/Instance'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
  /instances/{name}:
    get:
      description: 'Get Instance'
      tags:
        - Instance
      operationId: get
      produces:
        - application/json
      parameters:
        - name: name
          in: path
          description: 'Instance name'
          required: true
          x-nullable: false
          pattern: ^[A-Za-z0-9\-_.]{1,32}$
          type: string
      responses:
        '200':
          description: 'Get Instance succeeded'
          schema:
              $ref: '#/definitions/Instance'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
    delete:
      description: 'Delete Instance'
      tags:
        - Instance
      operationId: delete
      produces:
        - application/json
      parameters:
        - name: name
          in: path
          description: 'Instance name'
          required: true
          x-nullable: false
          pattern: ^[A-Za-z0-9\-_.]{1,32}$
          type: string
      responses:
        '200':
          description: 'Delete Instance succeeded'
          schema:
              type: object
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
  /instances/{name}/stop:
    post:
      description: 'Stop Instance'
      tags:
        - Instance
      operationId: stop
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: name
          in: path
          description: 'Instance name'
          required: true
          x-nullable: false
          pattern: ^[A-Za-z0-9\-_.]{1,32}$
          type: string
      responses:
        '200':
          description: 'Stop Instance succeeded'
          schema:
              $ref: '#/definitions/Instance'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
  /instances/{name}/start:
    post:
      description: 'Start instance'
      tags:
        - Instance
      operationId: start
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: name
          in: path
          description: 'Instance name'
          required: true
          x-nullable: false
          pattern: ^[A-Za-z0-9\-_.]{1,32}$
          type: string
      responses:
        '200':
          description: 'Start instance succeeded'
          schema:
              $ref: '#/definitions/Instance'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
parameters:
  'trait:paged:limit':
    name: limit
    in: query
    required: false
    type: integer
    format: uint8
    maximum: 255
  'trait:paged:skip':
    name: skip
    in: query
    required: false
    type: string
responses:
  'trait:standardErrors:400':
    description: ''
    schema:
      type: object
      properties:
        message:
          type: string
      required:
        - message
  'trait:standardErrors:401':
    description: ''
    schema:
      type: object
  'trait:standardErrors:403':
    description: ''
    schema:
      type: object
      properties:
        message:
          type: string
      required:
        - message
  'trait:standardErrors:404':
    description: ''
    schema:
      type: object
      properties:
        status:
          type: string
        error:
          type: string
      required:
        - status
        - error
  'trait:standardErrors:500':
    description: ''
    schema:
      type: object
definitions:
  ReadyStatus:
    description: 'Ready status'
    type: object
    additionalProperties:
      type: string
  Instance:
    description: 'Instance'
    required:
      - id
      - config
      - status
    properties:
      config: 
        "$ref": "#/definitions/InstanceConfig"
        x-nullable: false
      id:
        type: integer
        format: uint8
        minimum: 0
        maximum: 255
        x-nullable: false
        description: 'Instance ID'
      last_modified:
        type: integer
        format: int64
        minimum: 0
        x-nullable: false
        description: 'Last modified time'
      status:
        type: object
        x-nullable: false
        description: 'Instance status'
        additionalProperties:
          type: string
  InstanceConfig:
    description: 'Instance config'
    required:
      - name
      - frontend_interface
      - frontend_ipaddress
      - frontend_net_prefix
      - endpoints
    properties:
      name:
        type: string
        x-nullable: false
        pattern: ^[A-Za-z0-9\-_.]{1,32}$
        description: 'Instance name'
      frontend_interface:
        type: string
        x-nullable: false
        pattern: ^[A-Za-z0-9\-_.]{1,32}$
        description: 'Frontend network interface'
        example: 'eth0'
      frontend_ipaddress:
        type: string
        x-nullable: false
        description: 'Frontend IP address'
        pattern: ((^\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\s*$)|(^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$))
        example: '192.168.1.2'
      frontend_net_prefix:
        type: integer
        format: uint8
        minimum: 8
        maximum: 32
        default: 32
        x-nullable: false
        description: 'Frontend network prefix'
        example: 24
      endpoints:
        type: array
        x-nullable: false
        description: 'Endpoints'
        items:
          "$ref": "#/definitions/Endpoint"
  Endpoint:
    additionalProperties: false
    description: 'Endpoint'
    required:
      - frontend_port
      - mode
      - balance
      - backend_servers
    properties:
      frontend_port:
        type: integer
        format: uint16
        x-nullable: false
        description: 'Frontend port'
        example: 443
      frontend_options:
        type: string
        x-nullable: true
        default: ''
        description: 'Frontend options'
        example: 'ssl'
      frontend_ssl_options:
        type: object
        x-nullable: true
        description: 'Backend check commands'
        properties:
          server_cert:
            type: string
            x-nullable: false
          server_key:
            type: string
            x-nullable: false
          ca_cert:
            type: string
            x-nullable: true
          verify:
            type: string
            x-nullable: true
            enum:
              - required
              - optional
      mode:
        type: string
        x-nullable: false
        default: 'tcp'
        description: 'Protocol mode'
        enum:
          - tcp
          - udp
          - http
      balance:
        type: string
        x-nullable: false
        default: 'roundrobin'
        description: 'Balance algorithm'
      backend_options:
        type: array
        x-nullable: true
        description: 'Backend options'
        example: [
          "httpchk GET /"
        ]
        items:
          type: string
      backend_check_commands:
        type: object
        x-nullable: true
        description: 'Backend check commands'
        properties:
          check_type:
            type: string
            x-nullable: false
            example: http-check
            enum:
              - http-check
              - tcp-check
          commands:
            type: array
            x-nullable: true
            description: 'Backend TCP check commands'
            example: [
              "expect status 200"
            ]
            items:
              type: string
      backend_default_server:
        type: string
        x-nullable: true
        default: 'inter 2s downinter 5s rise 2 fall 2 slowstart 60s maxconn 2000 maxqueue 2000 weight 100'
        description: 'Backend default server options'
      backend_servers:
        type: array
        x-nullable: false
        description: 'Backend servers'
        items:
          "$ref": "#/definitions/BackendServer"
  BackendServer:
    additionalProperties: false
    description: 'Backend server'
    required:
      - name
      - ipaddress
      - port
    properties:
      name:
        type: string
        x-nullable: false
        pattern: ^[A-Za-z0-9\-_.]{1,32}$
        description: 'Backend server name'
      ipaddress:
        type: string
        x-nullable: false
        pattern: ((^\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\s*$)|(^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$))
        description: 'Backend server IP address'
      port:
        type: integer
        format: uint16
        x-nullable: false
        description: 'Backend server port'
      options:
        type: string
        x-nullable: true
        default: ''
        description: 'Backend server options'
      check_ssl_options:
        type: object
        x-nullable: true
        description: 'Backend check commands'
        properties:
          client_cert:
            type: string
            x-nullable: false
          client_key:
            type: string
            x-nullable: false
          ca_cert:
            type: string
            x-nullable: true
          verify:
            type: string
            x-nullable: true
            enum:
              - none